#
sphere/full-rod: ok (HS/ok)
	parms detecteur = {
		masse = 0 	# masse du detecteur (g)
		mode = standard 	# mode de sauvegarde
		demarrage = neant 	# nom du fichier de demarrage de run
		entretien = neant 	# nom du fichier d'entretien periodique
		voisins = () 	# detecteurs a sauver aussi en mode 'voisins'
		associes = () 	# detecteurs a sauver aussi en mode 'individuel'
	}
#
#	---------- Parametrage de la voie ball ----------
#
	parms ball = {
		usage = defaut 	# Utilisation finale de la voie (jetee/defaut/stream/evts/tout)
		sensibilite = 1 	# nV/keV
	}
	evenement ball = {
		duree = 1 	# Duree evenement (millisec.)
		delai = 0 	# Decalage evenement (millisec.)
		interv = 0.5 	# Fenetre de recherche (millisec.)
		pre-trigger = 50 	# Pre-trigger (%)
		temps-mort = 1 	# Temps mort avant nouvelle recherche (milllisec.) (=post-trigger si <0)
		base.depart = 20 	# Position du debut de ligne de base dans le pre-trigger (%)
		base.arrivee = 60 	# Position du fin de ligne de base dans le pre-trigger (%)
		temps.depart = 10 	# Position du debut de ligne de base dans le pre-trigger (%)
		temps.arrivee = 90 	# Position du fin de ligne de base dans le pre-trigger (%)
		phase1.t0 = 0 	# Debut integrale rapide (millisec.)
		phase1.dt = 0 	# Duree integrale rapide (millisec.)
		phase2.t0 = 0 	# Debut integrale longue (millisec.)
		phase2.dt = 0 	# Duree integrale longue (millisec.)
		template.dim = 512 	# Dimension du template (points)
		template.temps.montee = 0.01 	# temps de montee (millisec.)
		template.temps.descente1 = 0.05 	# temps de la descente #1 (millisec.)
		template.temps.descente2 = 0.1 	# temps de la descente #2 (millisec.)
		template.facteur.descente2 = 0.5 	# gain de la descente #2
		moyen.min = 1000 	# Amplitude min pour calcul evt moyen
		moyen.max = 8000 	# Amplitude max pour calcul evt moyen
		affichage.min = -8192 	# Signal recu minimum (ADU) [pour l'affichage]
		affichage.max = 8191 	# Signal recu maximum (ADU) [pour l'affichage]
	}
	trmt-au-vol ball = {
		type = neant 	# Traitement au vol (neant/demodulation/filtrage/invalidation)
		parametre = 21 	# Parametre (int) du traitement au vol
		texte = "sur 21 pts" 	# Parametre (char[]) du traitement au vol
		gain = 1 	# Gain logiciel au vol
		execution = au_vol 	# La demodulation peut etre differee (au_vol/sur_tampon)
	}
	trmt-sur-tampon ball = {
		type = lissage 	# Traitement pre-trigger (neant/demodulation/filtrage/invalidation)
		parametre = 11 	# Parametre (int) du traitement pre-trigger
		texte = "sur 11 pts" 	# Parametre (char[]) du traitement pre-trigger
		gain = 1 	# Gain logiciel pre-trigger
		dim.tampon = 10000000 	# Dimension du tampon resultat des traitements
		dim.lissage = 100 	# Dimension de l'evaluation de la ligne de base
		periodes.pattern = 0 	# Nb.periodes pour soustraction du pattern
		moyenne.archive = 0 	# Facteur de moyennage avant la sauvegarde des evenements
		template = neant 	# Filtrage par template (neant/database/analytique)
	}
	trigger ball = {
		type = derivee 	# Type de recherche d'evenement (neant/seuil/front/porte/bruit)
		signe = positif 	# Sens de la variation attendue (negatif/indifferent/positif)
		regulation = non 	# Autorisation de reguler automatiquement
		reprise = fixe 	# Tactique de gestion du temps mort apres evenement (fixe/attends_seuil/reporte)
		amplitude.min = 500 	# Amplitude minimum pour impulsions positives (ADU)
		amplitude.max = 23000 	# Amplitude maximum pour impulsions negatives (ADU)
		montee = 0.02 	# Temps de montee minimum (microsecs.)
		duree = 1e-05 	# Duree d'evenement minimum (microsecs.)
		#		Coupures avant sauvegarde
		coupures = non 	# Vrai si coupures actives
		underflow = 500 	# Plancher pour les amplitudes (ADU)
		overflow = 40000 	# Plafond pour les amplitudes (ADU)
		montee.min = 0 	# Temps de montee minimum (millisecs)
		montee.max = 1 	# Temps de montee maximum (millisecs)
		bruit.max = 100000 	# Bruit maximum sur la ligne de base (ADU)
	}
	regulation ball = {
		Type = neant 	# Type de regulation (neant/taux/intervalles)
		Plancher.min = 0 	# Plancher pour le seuil min
		Plafond.min = 0 	# Plafond  pour le seuil min
		Plancher.max = 0 	# Plancher pour le seuil max
		Plafond.max = 0 	# Plafond  pour le seuil max
		#
		#		Regulation par le taux d'evenements
		#
		Active.1 = non 	# Echelle de temps #1 en service
		Echelle.1 = 0 	# Echelle de temps #1 (mn)
		Nb.1.min = 0 	# Nombre d'evt minimum a l'echelle #1
		Action.1.min.type = continuer 	# Type action si nb1 < min1
		Action.1.min.parm = 0 	# Valeur action si nb1 < min1
		Nb.1.max = 0 	# Nombre d'evt maximum a l'echelle #1
		Action.1.max.type = continuer 	# Type action si nb1 > max1
		Action.1.max.parm = 0 	# Valeur action si nb1 > max1
		#
		Active.2 = non 	# Echelle de temps #2 en service
		Echelle.2 = 0 	# Echelle de temps #2 (mn)
		Nb.2.min = 0 	# Nombre d'evt minimum a l'echelle #2
		Action.2.min.type = continuer 	# Type action si nb2 < min2
		Action.2.min.parm = 0 	# Valeur action si nb2 < min2
		Nb.2.max = 0 	# Nombre d'evt maximum a l'echelle #2
		Action.2.max.type = continuer 	# Type action si nb2 > max2
		Action.2.max.parm = 0 	# Valeur action si nb2 > max2
		#
		Active.3 = non 	# Echelle de temps #3 en service
		Echelle.3 = 0 	# Echelle de temps #3 (mn)
		Nb.3.min = 0 	# Nombre d'evt minimum a l'echelle #3
		Action.3.min.type = continuer 	# Type action si nb3 < min3
		Action.3.min.parm = 0 	# Valeur action si nb3 < min3
		Nb.3.max = 0 	# Nombre d'evt maximum a l'echelle #3
		Action.3.max.type = continuer 	# Type action si nb3 > max3
		Action.3.max.parm = 0 	# Valeur action si nb3 > max3
		#
		#		Regulation par intervalles
		#
		Interv.nb = 0 	# Nombre d'intervalles
		Interv.duree = 0 	# Longueur (s)
		Interv.ajuste = 0 	# Ajustement seuil (ADU)
		Interv.evt = 0 	# Facteur decision
		Interv.min = 0 	# Delai mini (nb.interv.)
		Interv.incr = 0 	# Increment si bruit (ADU)
	}
#
#	---------- Parametrage de la voie corrector ----------
#
	parms corrector = {
		usage = defaut 	# Utilisation finale de la voie (jetee/defaut/stream/evts/tout)
		sensibilite = 1 	# nV/keV
	}
	evenement corrector = {
		duree = 0 	# Duree evenement (millisec.)
		delai = -1 	# Decalage evenement (millisec.)
		interv = 10 	# Fenetre de recherche (millisec.)
		pre-trigger = 25 	# Pre-trigger (%)
		temps-mort = -1 	# Temps mort avant nouvelle recherche (milllisec.) (=post-trigger si <0)
		base.depart = 25 	# Position du debut de ligne de base dans le pre-trigger (%)
		base.arrivee = 75 	# Position du fin de ligne de base dans le pre-trigger (%)
		temps.depart = 10 	# Position du debut de ligne de base dans le pre-trigger (%)
		temps.arrivee = 90 	# Position du fin de ligne de base dans le pre-trigger (%)
		phase1.t0 = 0 	# Debut integrale rapide (millisec.)
		phase1.dt = 0 	# Duree integrale rapide (millisec.)
		phase2.t0 = 0 	# Debut integrale longue (millisec.)
		phase2.dt = 0 	# Duree integrale longue (millisec.)
		template.dim = 1 	# Dimension du template (points)
		template.temps.montee = 100 	# temps de montee (millisec.)
		template.temps.descente1 = 300 	# temps de la descente #1 (millisec.)
		template.temps.descente2 = 0.5 	# temps de la descente #2 (millisec.)
		template.facteur.descente2 = 1000 	# gain de la descente #2
		moyen.min = 8000 	# Amplitude min pour calcul evt moyen
		moyen.max = 0 	# Amplitude max pour calcul evt moyen
		affichage.min = -8192 	# Signal recu minimum (ADU) [pour l'affichage]
		affichage.max = 8191 	# Signal recu maximum (ADU) [pour l'affichage]
	}
	trmt-au-vol corrector = {
		type = invalidation 	# Traitement au vol (neant/demodulation/filtrage/invalidation)
		parametre = 1 	# Parametre (int) du traitement au vol
		texte =  	# Parametre (char[]) du traitement au vol
		gain = 1 	# Gain logiciel au vol
		execution = au_vol 	# La demodulation peut etre differee (au_vol/sur_tampon)
	}
	trmt-sur-tampon corrector = {
		type = neant 	# Traitement pre-trigger (neant/demodulation/filtrage/invalidation)
		parametre = 1 	# Parametre (int) du traitement pre-trigger
		texte =  	# Parametre (char[]) du traitement pre-trigger
		gain = 1 	# Gain logiciel pre-trigger
		dim.tampon = 0 	# Dimension du tampon resultat des traitements
		dim.lissage = 0 	# Dimension de l'evaluation de la ligne de base
		periodes.pattern = 0 	# Nb.periodes pour soustraction du pattern
		moyenne.archive = 0 	# Facteur de moyennage avant la sauvegarde des evenements
		template = neant 	# Filtrage par template (neant/database/analytique)
	}
	trigger corrector = {
		type = neant 	# Type de recherche d'evenement (neant/seuil/front/porte/bruit)
		signe = positif 	# Sens de la variation attendue (negatif/indifferent/positif)
		regulation = non 	# Autorisation de reguler automatiquement
		reprise = fixe 	# Tactique de gestion du temps mort apres evenement (fixe/attends_seuil/reporte)
		amplitude.min = 50 	# Amplitude minimum pour impulsions positives (ADU)
		amplitude.max = -50 	# Amplitude maximum pour impulsions negatives (ADU)
		montee = 10.24 	# Temps de montee minimum (microsecs.)
		duree = 20.48 	# Duree d'evenement minimum (microsecs.)
		#		Coupures avant sauvegarde
		coupures = non 	# Vrai si coupures actives
		underflow = 0 	# Plancher pour les amplitudes (ADU)
		overflow = 0 	# Plafond pour les amplitudes (ADU)
		montee.min = 0.512 	# Temps de montee minimum (millisecs)
		montee.max = 25600 	# Temps de montee maximum (millisecs)
		bruit.max = 1e+06 	# Bruit maximum sur la ligne de base (ADU)
	}
	regulation corrector = {
		Type = neant 	# Type de regulation (neant/taux/intervalles)
		Plancher.min = 0 	# Plancher pour le seuil min
		Plafond.min = 0 	# Plafond  pour le seuil min
		Plancher.max = 0 	# Plancher pour le seuil max
		Plafond.max = 0 	# Plafond  pour le seuil max
		#
		#		Regulation par le taux d'evenements
		#
		Active.1 = non 	# Echelle de temps #1 en service
		Echelle.1 = 0 	# Echelle de temps #1 (mn)
		Nb.1.min = 0 	# Nombre d'evt minimum a l'echelle #1
		Action.1.min.type = continuer 	# Type action si nb1 < min1
		Action.1.min.parm = 0 	# Valeur action si nb1 < min1
		Nb.1.max = 0 	# Nombre d'evt maximum a l'echelle #1
		Action.1.max.type = continuer 	# Type action si nb1 > max1
		Action.1.max.parm = 0 	# Valeur action si nb1 > max1
		#
		Active.2 = non 	# Echelle de temps #2 en service
		Echelle.2 = 0 	# Echelle de temps #2 (mn)
		Nb.2.min = 0 	# Nombre d'evt minimum a l'echelle #2
		Action.2.min.type = continuer 	# Type action si nb2 < min2
		Action.2.min.parm = 0 	# Valeur action si nb2 < min2
		Nb.2.max = 0 	# Nombre d'evt maximum a l'echelle #2
		Action.2.max.type = continuer 	# Type action si nb2 > max2
		Action.2.max.parm = 0 	# Valeur action si nb2 > max2
		#
		Active.3 = non 	# Echelle de temps #3 en service
		Echelle.3 = 0 	# Echelle de temps #3 (mn)
		Nb.3.min = 0 	# Nombre d'evt minimum a l'echelle #3
		Action.3.min.type = continuer 	# Type action si nb3 < min3
		Action.3.min.parm = 0 	# Valeur action si nb3 < min3
		Nb.3.max = 0 	# Nombre d'evt maximum a l'echelle #3
		Action.3.max.type = continuer 	# Type action si nb3 > max3
		Action.3.max.parm = 0 	# Valeur action si nb3 > max3
		#
		#		Regulation par intervalles
		#
		Interv.nb = 0 	# Nombre d'intervalles
		Interv.duree = 0 	# Longueur (s)
		Interv.ajuste = 0 	# Ajustement seuil (ADU)
		Interv.evt = 0 	# Facteur decision
		Interv.min = 0 	# Delai mini (nb.interv.)
		Interv.incr = 0 	# Increment si bruit (ADU)
	}
